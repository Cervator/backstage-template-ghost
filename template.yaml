apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: ghost-template
  title: Test Ghost template
  description: template for a ghost blog
spec:
  owner: lambgoat/admin
  type: website

  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Prepare Ghost
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Short name of blog - used in URL, Git, etc. All lower case, no spaces or special characters other than -
          ui:autofocus: true
          ui:options:
            rows: 5
        title:
          title: Title
          type: string
          description: Title of the blog - can include spaces and special characters
          ui:options:
            rows: 5
        email:
          title: Email
          type: string
          description: Email account for initial admin
          ui:options:
            rows: 5
        password:
          title: Password
          type: string
          description: Initial admin password (must be 10+ chars)
          ui:options:
            rows: 5
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          title: ${{ parameters.title }}
          email: ${{ parameters.email }}
          password: ${{ parameters.password }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

#    - id: fetch-docs
#      name: Fetch Docs
#      action: fetch:plain
#      input:
#        targetPath: ./community
#        url: https://github.com/backstage/community/tree/main/backstage-community-sessions

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        # repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }} - newer?
        catalogInfoPath: '/catalog-info.yaml'
  output:
    remoteUrl: ${{ steps.publish.output.remoteUrl }} # link to the remote repository
    entityRef: ${{ steps.register.output.entityRef }} # link to the entity that has been ingested to the catalog
